<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Updating existing entity on KittyORM: Fast and reliable ORM for SQLite\Android</title>
    <link>https://akaish.github.io/KittyORMPages/crud_operations/update/</link>
    <description>Recent content in Updating existing entity on KittyORM: Fast and reliable ORM for SQLite\Android</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://akaish.github.io/KittyORMPages/crud_operations/update/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>DB schema</title>
      <link>https://akaish.github.io/KittyORMPages/crud_operations/update/l2_schema/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://akaish.github.io/KittyORMPages/crud_operations/update/l2_schema/</guid>
      <description>Create schema script generated by KittyORM for schema basic_database v. 1 CREATE TABLE IF NOT EXISTS cai (id INTEGER NOT NULL PRIMARY KEY, rnd_id INTEGER NOT NULL UNIQUE, animal TEXT CHECK (animal IN (&amp;#34;CAT&amp;#34;, &amp;#34;TIGER&amp;#34;, &amp;#34;LION&amp;#34;)), default_number INTEGER NOT NULL DEFAULT 28, creation_date TEXT NOT NULL DEFAULT CURRENT_DATE , creation_tmstmp INTEGER NOT NULL DEFAULT CURRENT_TIMESTAMP , CONSTRAINT CAI_FK FOREIGN KEY(rnd_id) REFERENCES random (id) ON UPDATE CASCADE ON DELETE CASCADE); CREATE INDEX IF NOT EXISTS basic_database_cai_creation_date_INDEX ON cai (creation_date); CREATE UNIQUE INDEX IF NOT EXISTS IAC_unique_index_creation_timestamp ON cai (creation_tmstmp); CREATE TABLE IF NOT EXISTS random (id INTEGER NOT NULL PRIMARY KEY ASC, random_int INTEGER, rnd_int_custom_column_name INTEGER, rndanimal TEXT, random_animal_name TEXT, random_animal_says TEXT); CREATE INDEX IF NOT EXISTS random_animal_index ON random (rndanimal); CREATE TABLE IF NOT EXISTS complex_random (id INTEGER NOT NULL PRIMARY KEY ASC, random_int INTEGER, rnd_int_custom_column_name INTEGER, rndanimal TEXT, random_animal_name TEXT, bool_f INTEGER, byte_f INTEGER, double_f REAL, long_f INTEGER, short_f INTEGER, float_f REAL, byte_array NONE, string_f TEXT, big_decimal_f TEXT, big_integer_f TEXT, uri_f TEXT, file_f TEXT, currency_f TEXT, string_s_d_f TEXT, bitmap_colour TEXT, byte_array_s_d_f BLOB, bool_f_f INTEGER, byte_f_f INTEGER, double_f_f REAL, short_f_f INTEGER, float_f_f REAL, long_f_f INTEGER, date_f INTEGER, calendar_f INTEGER, timestamp_f INTEGER); Drop schema script generated by KittyORM for schema basic_database v.</description>
    </item>
    
    <item>
      <title>Source code</title>
      <link>https://akaish.github.io/KittyORMPages/crud_operations/update/l2t2_code/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://akaish.github.io/KittyORMPages/crud_operations/update/l2t2_code/</guid>
      <description>KittyORM update example  1// Initializing database instance 2BasicDatabase db = new BasicDatabase(getContext()); 3// Getting mapper instance 4RandomMapper mapper = (RandomMapper) db.getMapper(RandomModel.class); 5// Getting existing model from database (assuming that 0l model exists) 6RandomModel toUpdate = mapper.findByIPK(0l); 7// Setting model fields 8toUpdate.randomInt = 12; 9... 10// Saving model with save method 11mapper.save(toUpdate); 12// Saving model with direct insert call 13mapper.update(toInsert); 1// Initializing database instance 2BasicDatabase db = new BasicDatabase(getContext()); 3// Getting mapper instance 4RandomMapper mapper = (RandomMapper) db.</description>
    </item>
    
  </channel>
</rss>